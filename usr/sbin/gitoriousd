#!/bin/sh
progname="gitoriousd"
# Dynamically find prefix
prefix="/tmp/gitoriousd"
# Read /etc/gitorious.conf, expose env vars
current_dir=$(dirname $0)
gitorious_conf=$current_dir/../../etc/gitorious.conf

# Look for $PREFIX/gitorious.conf, source if present
if [ -f $gitorious_conf ]; then
    . $gitorious_conf
    export GITORIOUS_HOME
else
    echo "gitorious.conf not found, exiting"
    exit 1
fi

start(){
    for app in $(find "$prefix/usr/libexec/$progname" -type f -not -name "*.rb" -executable)
    do
	local name=$(basename $app)
	_checkpid $name && echo "Not starting $name" || $app
    done
}

_checkpid() {
    local name=$1
    local pidfile="$prefix/var/run/$progname/$name.pid"
    if [ -f $pidfile ]; then
	pid=$(cat $pidfile 2>/dev/null)
	ps -p $pid >/dev/null 2>&1
	exitstatus=$?
	if [ $exitstatus -eq 0 ]; then
	    return 0
	else
	    return 1
	fi
    else
	return 1
    fi
}

status(){
    for path in $(find "$prefix/usr/libexec/$progname" -not -name "*.rb" -type f -executable)
    do
	local name=$(basename $path)
	_checkpid $name && /bin/echo "$name is up" || /bin/echo "$name is down"
    done
}

_signal_all(){
    local signal=$1
    for app in $(find "$prefix/usr/libexec/$progname" -type f -not -name "*.rb" -executable)
    do
	local name=$(basename $app)
	local pidfile="$prefix/var/run/$progname/$name.pid"
	if [ -f $pidfile ]; then
	    local pid=$(cat $pidfile 2>/dev/null)
	    kill -$signal $pid 2>/dev/null
	fi
    done
}

stop(){
    _signal_all "QUIT"
}

reload(){
    _signal_all "HUP"
}

restart(){
    stop
    start
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    status)
	status
	;;
    restart)
	stop
	start
	;;
    reload)
	reload
	;;
    *)
	/bin/echo "Usage: $0 {start,stop,restart,status}"
esac
